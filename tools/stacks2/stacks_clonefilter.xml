<tool id="stacks2_clonefilter" name="Stacks2: clone filter" version="@STACKS_VERSION@+galaxy@WRAPPER_VERSION@">
<description>Identify PCR clones</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_cmd"/>
    <command><![CDATA[
        #if $data_type.dt_select == "single"

            #if $data_type.fname.is_of_type('fastqsanger')
                #set $ext = ".fq"
                #set inputype = "fastq"
            #else
                #set $ext = ".fq.gz"
                #set inputype = "gzfastq"
            #end if

            ln -s '$data_type.fname' R1$ext &&
        #else

            #if $data_type.fwd.is_of_type('fastqsanger')
                #set $ext = ".fq"
                #set inputype = "fastq"
            #else
                #set $ext = ".fq.gz"
                #set inputype = "gzfastq"
            #end if

            ln -s '$data_type.fwd' R1$ext &&
            ln -s '$data_type.rev' R2$ext &&
        #end if


        mkdir outputs

        &&

        clone_filter
            #if $data_type.dt_select == 'single':
                -f R1$ext
            #else
                -1 R1$ext
                -2 R2$ext
            #end if

            -i $inputype

            -o outputs
            $capture
            $data_type.barcode_encoding
            #if $oligo_len_1
                --oligo_len_1 $oligo_len_1
            #end if
            #if $oligo_len_2
                --oligo_len_2 $oligo_len_2
            #end if
            $retain_oligo
            ## only supports fastq.gz output since the 
            ## the program outputs empty files for fasta/fastq 
            -y gzfastq
    ]]></command>
    <inputs>
        <conditional name="data_type">
            <param name="dt_select" type="select" label="Single or Paired-end">
                <option value="single">Single</option>
                <option value="pair">Pair</option>
            </param>
            <when value="single">
                <param name="fname" type="data" format="fastqsanger,fastqsanger.gz" label="FASTQ" />
                <param name="barcode_encoding" type="select" label="Barcode location">
                    <expand macro="barcode_encoding_single" type="Random oligo"/>
                </param>

            </when>
            <when value="pair">
                <param name="fwd" type="data" format="fastqsanger,fastqsanger.gz" label="Forward FASTQ" />
                <param name="rev" type="data" format="fastqsanger,fastqsanger.gz" label="Reverse FASTQ" />
                <param name="barcode_encoding" type="select" label="Barcode location">
                    <expand macro="barcode_encoding_pair" type="Random oligo"/>
                </param>
            </when>
        </conditional>
        <param name="capture" type="boolean" checked="false" truevalue="-D" falsevalue="" argument="-D" label="Capture discarded reads to a file" />
        <param name="oligo_len_1" type="integer" value="0" label="length of the single-end oligo sequence in data set"/>
        <param name="oligo_len_2" optional="true" type="integer" label="length of the paired-end oligo sequence in data set"/>
        <param argument="--retain_oligo" type="boolean" checked="false" truevalue="--retain_oligo" falsevalue="" label="do not trim off the random oligo sequence (if oligo is inline)" />

    </inputs>
    <outputs>
        <data format="fastqsanger.gz" name="clean" from_work_dir="outputs/R1.fq.gz"  label="${tool.name} on ${on_string}">
            <filter>data_type['dt_select'] == 'single'</filter>
        </data>

        <data format="fastqsanger.gz" name="clean_fwd" from_work_dir="outputs/R1.1.fq.gz" label="${tool.name} on ${on_string} Forward reads">
            <filter>data_type['dt_select'] == 'pair'</filter>
        </data>
        <data format="fastqsanger.gz" name="clean_rev" from_work_dir="outputs/R2.2.fq.gz" label="${tool.name} on ${on_string} Reverse reads">
            <filter>data_type['dt_select'] == 'pair'</filter>
        </data>
    </outputs>
    <tests>
        <!-- single end, defaults-->
        <test>
            <conditional name="data_type">
                <param name="dt_select" value="single" />
                <param name="fname" ftype="fastqsanger.gz" value="clonefilter/R1_0001.1.fq.gz" />
            </conditional>
            <param name="oligo_len_1" value="6" />
            <output name="clean" compare="sim_size" file="clonefilter/Removed1_0001.1.1.fq.single.gz"/>
        </test>
        <!-- single end, alt BCencoding, capture-->
        <test>
            <conditional name="data_type">
                <param name="dt_select" value="single" />
                <param name="fname" ftype="fastqsanger.gz" value="clonefilter/R1_0001.1.fq.gz" />
                <param name="barcode_encoding" value="--index_null" />
            </conditional>
            <param name="capture" value="-D" />
            <param name="oligo_len_1" value="6" />
            <assert_command>
                <has_text text="-D" />
            </assert_command>
            <output name="clean" compare="sim_size" file="clonefilter/Removed1_0001.1.1.fq.gz"/>
        </test>
        <!-- paired end, defaults-->
        <test>
            <conditional name="data_type">
                <param name="dt_select" value="pair" />
                <param name="fwd" ftype="fastqsanger" value="clonefilter/R1_0001.1.fq.gz" />
                <param name="rev" ftype="fastqsanger" value="clonefilter/R2_0001.2.fq.gz" />
            </conditional>
            <param name="oligo_len_1" value="6" />
            <output name="clean_fwd" compare="sim_size" file="clonefilter/Removed1_0001.1.1.fq.gz"/>
            <output name="clean_rev" compare="sim_size" file="clonefilter/Removed2_0001.2.2.fq.gz"/>
        </test>
        <!-- paired end, non defaults-->
        <test>
            <conditional name="data_type">
                <param name="dt_select" value="pair" />
                <param name="fwd" ftype="fastqsanger.gz" value="clonefilter/R1_0001.1.fq.gz" />
                <param name="rev" ftype="fastqsanger.gz" value="clonefilter/R2_0001.2.fq.gz" />
            </conditional>
            <param name="oligo_len_1" value="6" />
            <param name="capture" value="-D" />
            <param name="retain_oligo" value="--retain_oligo" />
            <assert_command>
                <has_text text="--retain_oligo" />
            </assert_command>
            <output name="clean_fwd" compare="sim_size" file="clonefilter/Removed1_0001.1.1.fq.gz"/>
            <output name="clean_rev" compare="sim_size" file="clonefilter/Removed2_0001.2.2.fq.gz"/>
        </test>
    </tests>
    <help>
<![CDATA[
.. class:: infomark

The clone_filter program is designed to identify PCR clones.

@STACKS_INFOS@
]]>
    </help>
    <expand macro="citation" />
</tool>
