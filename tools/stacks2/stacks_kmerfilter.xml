<tool id="stacks2_kmerfilter" name="Stacks2: kmer filter" version="@STACKS_VERSION@+galaxy@WRAPPER_VERSION@">
<description>Identify PCR clones</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_cmd"/>
    <command detect_errors="aggressive"><![CDATA[
        #if $data_type.dt_select == "single"
            #if $data_type.fname.is_of_type('fastqsanger')
                #set $ext = ".fq"
                #set inputype = "fastq"
            #else
                #set $ext = ".fq.gz"
                #set inputype = "gzfastq"
            #end if
            ln -s '$data_type.fname' R1$ext &&
        #elif $data_type.dt_select == "pair"
            #if $data_type.fwd.is_of_type('fastqsanger')
                #set $ext = ".fq"
                #set inputype = "fastq"
            #else
                #set $ext = ".fq.gz"
                #set inputype = "gzfastq"
            #end if
            ln -s '$data_type.fwd' R1$ext &&
            ln -s '$data_type.rev' R2$ext &&
        #end if

        mkdir clone_outputs

        &&

        kmer_filter
            #if $data_type.dt_select == 'single':
                -f R1$ext
            #else
                -1 R1$ext
                -2 R2$ext
            #end if
## TODO    $options_kmer_char.read_k_freq
            -i $inputype
            -o clone_outputs
            $capture
            -y gzfastq
$options_filtering.rare
$options_filtering.abundant
--k_len $options_filtering.k_len
--max_k_freq $options_advanced_filtering.max_k_freq
#if str($options_advanced_filtering.min_lim)!="":
    --min_lim $options_advanced_filtering.min_lim
#end if
#if str($options_advanced_filtering.max_lim)!="":
    --max_lim $options_advanced_filtering.max_lim
#end if
#if str($options_normalization.normalize)!="":
    --normalize $options_normalization.normalize
#end if
#if $options_kmer_char.write_k_freq
    --read_k_freq $kfreq
#end if
$options_kmer_char.k_dist
#if $options_kmer_char.k_dist
    | sed 's/KmerFrequency/# KmerFrequency/' $kfreqdist> 
#end if


    ]]></command>
    <inputs>
        <conditional name="data_type">
            <param name="dt_select" type="select" label="Single or Paired-end">
                <option value="single">Single</option>
                <option value="pair">Pair</option>
            </param>
            <when value="single">
                <param name="fname" type="data" format="fastqsanger,fastqsanger.gz" label="FASTQ" />
            </when>
            <when value="pair">
                <param name="fwd" type="data" format="fastqsanger,fastqsanger.gz" label="Forward FASTQ" />
                <param name="rev" type="data" format="fastqsanger,fastqsanger.gz" label="Reverse FASTQ" />
            </when>
        </conditional>
        <param name="capture" type="boolean" checked="false" truevalue="-D" falsevalue="" argument="-D" label="Capture discarded reads to a file" />
        <section name="options_filtering" title="Filtering options" expanded="False">
            <param argument="--rare" type="boolean" checked="false" truevalue="--rare" falsevalue="" label="turn on filtering based on rare k-mers" />
            <param argument="--abundant" type="boolean" checked="false" truevalue="--abundant" falsevalue="" label="turn on filtering based on abundant k-mers" />
            <param argument="--k_len" type="integer" value="15" label="k-mer size" />
        </section>
        <section name="options_advanced_filtering" title="Advanced fitering options" expanded="False">
            <param argument="--max_k_freq" type="integer" value="20000" label="number of times a kmer must occur to be considered abundant" />
            <param argument="--min_lim" type="integer" value="" optional="true" label="number of rare kmers occuring in a row required to discard a read" help="(default: 80% of the k-mer length)." />
            <param argument="--max_lim" type="integer" value="" optional="true" label="number of abundant kmers required to discard a read" help="(default: 80% of the k-mers in a read)" />
        </section>
        <section name="options_normalization" title="Normalization options" expanded="False">
            <param argument="--normalize" type="integer" value="" optional="true" label="normalize read depth according to k-mer coverage" />
        </section>
        <section name="options_kmer_char" title="Characterizing K-mers options" expanded="False">
            <param argument="--write_k_freq" type="boolean" checked="false" truevalue="--write_k_freq" falsevalue="" label="write kmers along with their frequency of occurrence and exit" />
            <param argument="--k_dist" type="boolean" checked="false" truevalue="--k_dist" falsevalue="" label="print k-mer frequency distribution and exit" />
        </section>
	<!--<section name="options_advanced_input" title="Advanced input options" expanded="False">
            <param argument="\-\-read_k_freq" type="boolean" checked="false" truevalue="\-\-read_k_freq" falsevalue="" label="read a set of kmers along with their frequencies of occurrence instead of reading raw input files" />
	</section>-->
    </inputs>
    <outputs>
        <data format="fastqsanger.gz" name="clean" from_work_dir="clone_outputs/R1.fq.gz"  label="${tool.name} on ${on_string}">
            <filter>data_type['dt_select'] == 'single' and not options_kmer_char['k_dist']</filter>
        </data>

        <data format="fastqsanger.gz" name="clean_fwd" from_work_dir="clone_outputs/R1.1.fq.gz" label="${tool.name} on ${on_string} Forward reads">
            <filter>data_type['dt_select'] == 'pair' and not options_kmer_char['k_dist']</filter>
        </data>
        <data format="fastqsanger.gz" name="clean_rev" from_work_dir="clone_outputs/R2.2.fq.gz" label="${tool.name} on ${on_string} Reverse reads">
            <filter>data_type['dt_select'] == 'pair'</filter>
        </data>
        <data format="tabular" name="kfreq" label="${tool.name} on ${on_string} kmer frequencies">
            <filter>options_kmer_char['write_k_freq']</filter>
        </data>
        <data format="tabular" name="kfreqdist" label="${tool.name} on ${on_string} kmer frequency distribution">
            <filter>options_kmer_char['k_dist']</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <conditional name="data_type">
                <param name="dt_select" value="single" />
                <param name="fname" ftype="fastqsanger.gz" value="clonefilter/R1_0001.1.fq.gz" />
            </conditional>
            <output name="clean" compare="sim_size" file="clonefilter/Removed1_0001.1.1.fq.single.gz"/>
        </test>
        <test>
            <conditional name="data_type">
                <param name="dt_select" value="single" />
                <param name="fname" ftype="fastqsanger.gz" value="clonefilter/R1_0001.1.fq.gz" />
            </conditional>
            <section name="options_kmer_char">
                <param name="write_k_freq" value="--write_k_freq" />
            </section>
            <output name="kfreq" file="kmerfilter/kfreq.tsv"/>
        </test>
	<!--<test>
            <conditional name="data_type">
                <param name="dt_select" value="single" />
                <param name="fname" ftype="fastqsanger.gz" value="clonefilter/R1_0001.1.fq.gz" />
                <param name="barcode_encoding" value="\-\-inline_null" />
                
                </conditional>
            <output name="clean" compare="sim_size" file="clonefilter/Removed1_0001.1.1.fq.gz"/>
        </test>
        <test>
            <conditional name="data_type">
                <param name="dt_select" value="pair" />
                <param name="fwd" ftype="fastqsanger" value="clonefilter/R1_0001.1.fq.gz" />
                <param name="rev" ftype="fastqsanger" value="clonefilter/R2_0001.2.fq.gz" />
            </conditional>
            <output name="clean_fwd" compare="sim_size" file="clonefilter/Removed1_0001.1.1.fq.gz"/>
            <output name="clean_rev" compare="sim_size" file="clonefilter/Removed2_0001.2.2.fq.gz"/>
        </test>
        <test>
            <conditional name="data_type">
                <param name="dt_select" value="pair" />
                <param name="fwd" ftype="fastqsanger.gz" value="clonefilter/R1_0001.1.fq.gz" />
                <param name="rev" ftype="fastqsanger.gz" value="clonefilter/R2_0001.2.fq.gz" />
            </conditional>
            <output name="clean_fwd" compare="sim_size" file="clonefilter/Removed1_0001.1.1.fq.gz"/>
            <output name="clean_rev" compare="sim_size" file="clonefilter/Removed2_0001.2.2.fq.gz"/>
    </test>-->
    </tests>
    <help>
<![CDATA[
.. class:: infomark

Allows paired or single-end reads to be filtered according to the number or rare or abundant kmers they contain. Useful for both RAD datasets as well as randomly sheared genomic or transcriptomic data. 

@STACKS_INFOS@
]]>
    </help>
    <expand macro="citation" />
</tool>
