name: Galaxy Tool Linting and Tests for push and PR
on: [push, pull_request]
concurrency:
  # Group runs by PR, but keep runs on the default branch separate
  # because we do not want to cancel ToolShed uploads
  group: pr-${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && github.run_number || github.ref }}
  cancel-in-progress: true
jobs:
  # the setup job does:
  # 1. cache the pip cache and .planemo
  # 2. determine the list of changed repositories
  # it produces one artifact which contains
  # - a file with the latest SHA from the chosen branch of the Galaxy repo
  # - a file containing the list of changed repositories
  # which are needed in subsequent steps.
  setup:
    name: Setup cache and determine changed repositories
    # adapt the owner name
    if: ${{ github.repository_owner == 'galaxyproject' }}
    uses: galaxyproject/tools-iuc/.github/workflows/wf_setup.yaml@master
    with:
      fetch-depth: 0
      # set these variables if you want to update independent of the IUC repo
      # default-galaxy-fork: galaxyproject
      # default-galaxy-branch: release_22.05
      max-chunks: 4

  # Lint changed repositories
  # - Planemo lint
  # - flake8 of Python scripts
  # - lintr of R scripts
  lint:
    needs: setup
    uses: galaxyproject/tools-iuc/.github/workflows/wf_lint.yaml@master
    with:
      repository-list: ${{ needs.setup.outputs.repository-list }}
      tool-list: ${{ needs.setup.outputs.tool-list }}
      galaxy-head-sha: ${{ needs.setup.outputs.galaxy-head-sha }}
      commit-range: ${{ needs.setup.outputs.commit-range }}
      planemo-version: ${{ needs.setup.outputs.planemo-version }}
      # set these values if you want to use different values than the IUC defaults
      # max-file-size: 1M
      # report-level: all
      # fail-level: warn
  # Planemo test the changed repositories, each chunk creates an artifact
  # containing HTML and JSON reports for the executed tests
  test:
    name: Test tools
    needs: setup
    uses: galaxyproject/tools-iuc/.github/workflows/wf_test.yaml@master
    with:
      galaxy-fork: ${{ needs.setup.outputs.galaxy-fork }}
      galaxy-branch: ${{ needs.setup.outputs.galaxy-branch }}
      planemo-version: ${{ needs.setup.outputs.planemo-version }}
      repository-list: ${{ needs.setup.outputs.repository-list }}
      chunk-count: ${{ needs.setup.outputs.chunk-count }}
      chunk-list: ${{ needs.setup.outputs.chunk-list }}
      galaxy-head-sha: ${{ needs.setup.outputs.galaxy-head-sha }}
      # set these values if you want to use different values than the IUC defaults
      # test-timeout: 900

  # deploy the tools to the toolsheds (first TTS for testing)
  deploy:
    name: Deploy
    if: ${{ github.repository_owner == 'galaxyproject' }}
    needs: [setup, lint, test]
    uses: galaxyproject/tools-iuc/.github/workflows/wf_deploy.yaml@master
    with:
      repository-list: ${{ needs.setup.outputs.repository-list }}
      galaxy-head-sha: ${{ needs.setup.outputs.galaxy-head-sha }}
      planemo-version: ${{ inputs.planemo-version }}
    secrets:
      TTS_API_KEY: ${{ secrets.TTS_API_KEY }}
      TS_API_KEY: ${{ secrets.TS_API_KEY }}

  deploy-report:
    name: Report deploy status
    needs: [deploy]
    if: ${{ always() && needs.deploy.result != 'success' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' ) && github.repository_owner == 'galaxyproject' }}
    runs-on: ubuntu-latest
    steps:
    # report to the PR if deployment failed
    - name: Get PR object
      uses: 8BitJonny/gh-get-current-pr@2.2.0
      id: getpr
      with:
        sha: ${{ github.event.after }}
    - name: Create comment
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ secrets.PAT }}
        issue-number: ${{ steps.getpr.outputs.number }}
        body: |
          Attention: deployment ${{ needs.deploy.result }}!

          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  determine-success:
    name: Check workflow success
    needs: [setup, lint, test]
    if: ${{ always() && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
    - name: Check tool lint status
      if: ${{ needs.lint.result != 'success' }}
      run: exit 1
    - name: Check tool test status
      if: ${{ needs.test.result != 'success' }}
      run: exit 1
